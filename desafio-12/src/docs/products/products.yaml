paths:
  /api/products:
    get:
      summary: Retrieves all products from database
      tags:
        - Products
      responses:
        "200":
          description: Users have been correctly retrieved from database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
    post:
      summary: Creates one product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/Product"
      responses:
        "200":
          description: Product has been correctly created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "404":
          description: Validation error

  /api/products/mockingproducts:
    get:
      summary: Creates 10 dummy products using faker library
      tags:
        - Products
      responses:
        "200":
          description: Users have been correctly created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Internal server error

  /api/products/{pid}:
    get:
      summary: Retrieves one product based on the pid parameter
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Product's id in database
          schema:
            $type: String
      responses:
        "200":
          description: Product has been correctly retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
    put:
      summary: Updates one product based on the pid parameter
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Product's id in database
          schema:
            $type: String
      responses:
        "200":
          description: Product has been correctly updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
    delete:
      summary: Deletes one product based on the pid parameter
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: Product's id in database
          schema:
            $type: String
      responses:
        "200":
          description: Product has been correctly deleted

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Mongo DB's autogenerated id
        title:
          type: String
          description: Product's title
        description:
          type: String
          description: Product's description
        price:
          type: Number
          description: Product's price
        thumbnail:
          type: Array
          description: Product's images
        code:
          type: String
          description: Product's unique internal code
        stock:
          type: Number
          description: Product's stock
        status:
          type: Boolean
          description: Product's availability
        category:
          type: String
          description: Product's category
        owner:
          type: ObjectId
          description: Mongo DB's autogenerated id corresponding to product's owner
      example:
        _id: ObjectId(655b7c15490c7d4ce4ad8951)
        title: Modern Cotton Hat
        description: Defluo spero claro usus adicio tripudio.
        price: 561
        thumbnail: ["https://loremflickr.com/640/480"]
        code: A32NJ2235673
        stock: 10
        status: true
        category: Movies
        owner: ObjectId(65232fb18177c05b9a737af3)
  requestBodies:
    Product:
      type: object
      properties:
        title:
          type: String
          description: Product's title
        description:
          type: String
          description: Product's description
        price:
          type: Number
          description: Product's price
        thumbnail:
          type: Array
          description: Product's images
        code:
          type: String
          description: Product's unique internal code
        stock:
          type: Number
          description: Product's stock
        status:
          type: Boolean
          description: Product's availability
        category:
          type: String
          description: Product's category
      example:
        title: Modern Cotton Hat
        description: Defluo spero claro usus adicio tripudio.
        price: 561
        thumbnail: ["https://loremflickr.com/640/480"]
        code: A32NJ2235673A
        stock: 10
        status: true
        category: Movies
